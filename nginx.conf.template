# SayIt 校园社交平台 Nginx 配置模板
# 使用方法: 复制此文件并根据实际情况修改域名和路径

# 基础配置 - 无域名版本（仅HTTP）
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    root /home/sayit/sayit/public;
    index index.html index.htm;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 文件上传大小限制
    client_max_body_size 10M;
    
    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
    
    # 静态文件缓存配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # 处理字体文件的CORS
        if ($request_filename ~* ^.*?\.(eot|woff|woff2|ttf)$) {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # 上传文件路由
    location /uploads/ {
        alias /home/sayit/sayit/public/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Next.js 静态文件
    location /_next/static/ {
        alias /home/sayit/sayit/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # API 路由代理
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # API 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 主应用代理
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTPS 配置模板 (需要域名)
# server {
#     listen 80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
# 
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#     
#     root /home/sayit/sayit/public;
#     index index.html index.htm;
#     
#     # SSL 证书配置
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # SSL 安全配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#     
#     # HSTS (HTTP Strict Transport Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#     
#     # 安全头设置
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
#     
#     # 文件上传大小限制
#     client_max_body_size 10M;
#     
#     # Gzip 压缩配置
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_proxied expired no-cache no-store private auth;
#     gzip_types
#         text/css
#         text/javascript
#         text/xml
#         text/plain
#         text/x-component
#         application/javascript
#         application/x-javascript
#         application/json
#         application/xml
#         application/rss+xml
#         application/atom+xml
#         font/truetype
#         font/opentype
#         application/vnd.ms-fontobject
#         image/svg+xml;
#     
#     # 静态文件缓存配置
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         add_header Vary "Accept-Encoding";
#         access_log off;
#         
#         # 处理字体文件的CORS
#         if ($request_filename ~* ^.*?\.(eot|woff|woff2|ttf)$) {
#             add_header Access-Control-Allow-Origin "*";
#         }
#     }
#     
#     # 上传文件路由
#     location /uploads/ {
#         alias /home/sayit/sayit/public/uploads/;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         access_log off;
#     }
#     
#     # Next.js 静态文件
#     location /_next/static/ {
#         alias /home/sayit/sayit/.next/static/;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         access_log off;
#     }
#     
#     # API 路由代理
#     location /api/ {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         
#         # API 超时设置
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#     
#     # 主应用代理
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         
#         # 超时设置
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#         
#         # 缓冲设置
#         proxy_buffering on;
#         proxy_buffer_size 128k;
#         proxy_buffers 4 256k;
#         proxy_busy_buffers_size 256k;
#     }
#     
#     # 健康检查端点
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
# }

# 负载均衡配置示例 (可选)
# upstream sayit_backend {
#     least_conn;
#     server localhost:3000 weight=1 max_fails=2 fail_timeout=30s;
#     server localhost:3001 weight=1 max_fails=2 fail_timeout=30s backup;
# }

# 日志格式配置
log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   '"$host" sn="$server_name" '
                   'rt=$request_time '
                   'ua="$upstream_addr" us="$upstream_status" '
                   'ut="$upstream_response_time" ul="$upstream_response_length" '
                   'cs=$upstream_cache_status';

# 速率限制配置 (可选)
# limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
# limit_req_zone $binary_remote_addr zone=api:10m rate=20r/m;
# limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/m;

# 使用示例:
# location /api/auth/ {
#     limit_req zone=login burst=3 nodelay;
#     # ... 其他配置
# }
# 
# location /api/ {
#     limit_req zone=api burst=10 nodelay;
#     # ... 其他配置
# }
# 
# location /api/upload/ {
#     limit_req zone=upload burst=2 nodelay;
#     # ... 其他配置
# }
